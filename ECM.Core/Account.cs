using System;using EveApi;namespace ECM.Core{    public class Account    {        AuthorisedApiRequest<ApiKeyInfo> m_accountKeyInfo;        AuthorisedApiRequest<AccountStatus> m_accountStatus;        public ApiKeyMask KeyAccess        {            get;            private set;        }        public DateTime Expires        {         get;         set;        }        public AccountStatus Status        {            get;            private set;        }        public string KeyID        {            get;            private set;        }        public string VCode        {            get;            private set;        }        public Account (string keyID, string vCode)        {            KeyID = keyID;            VCode = vCode;            m_accountKeyInfo = new AuthorisedApiRequest<ApiKeyInfo>(keyID, vCode);            m_accountKeyInfo.OnRequestUpdate += AccountKeyInfoUpdate;            m_accountStatus = new AuthorisedApiRequest<AccountStatus>(keyID, vCode);            m_accountStatus.OnRequestUpdate += AccountStatusUpdate;        }        void AccountKeyInfoUpdate (ApiResult<ApiKeyInfo> result)        {            if(result != null && result.Error == null)            {                KeyAccess = result.Result.Key.AccessMask;                Expires = result.Result.Key.Expires;            }        }        void AccountStatusUpdate (ApiResult<AccountStatus> result)        {            if(result != null && result.Error == null)            {                Status = result.Result;            }        }        public void UpdateOnHeartbeat()        {            m_accountKeyInfo.UpdateOnSecTick();            m_accountStatus.UpdateOnSecTick();        }    }}