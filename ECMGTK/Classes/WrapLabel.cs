////// GTK# adaption from the WrapLabel class from/// http://sourceforge.net/projects/view////using System;using System.ComponentModel;namespace ECMGTK{    [ToolboxItem(true)]    public class WrapLabel : Gtk.Label    {     int mWrapWidth;     int mWrapHeight;          public WrapLabel() : this("")     {     }          public WrapLabel(string text)     {         mWrapWidth = 0;         mWrapHeight = 0;         SetAlignment(0,0);                  Text = text;     }          public new string Text     {         get         {             return base.Text;         }         set         {             base.Text = value;             SetWrapWidth(mWrapWidth);         }     }          public new string Markup     {         set         {             base.Markup = value;             SetWrapWidth(mWrapWidth);         }     }          protected override void OnSizeAllocated (Gdk.Rectangle allocation)     {         base.OnSizeAllocated (allocation);         SetWrapWidth(allocation.Width);     }                         protected override void OnSizeRequested (ref Gtk.Requisition requisition)     {         requisition.Width = 0;         requisition.Height = mWrapHeight;     }         private void SetWrapWidth(int width)     {         if (width == 0) {             return;         }                  /*         * We may need to reset the wrap width, so do this regardless of whether         * or not we've changed the width.         */         Layout.Width = (int)width * (int)Pango.Scale.PangoScale;                  int unused;         Layout.GetPixelSize(out unused, out mWrapHeight);                  if (mWrapWidth != width) {             mWrapWidth = width;             QueueResize();         }     }    }}